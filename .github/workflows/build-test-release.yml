name: Build-Test-Release

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: |
          set -euxo pipefail
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install || true
          fi
      - name: Run build (or mock)
        run: |
          set -euxo pipefail
          if npm run | grep -qE "build"; then
            npm run build
          else
            mkdir -p dist
            echo "ok" > dist/app.txt
          fi
          ls -lah || true
          ls -lah dist || true
      - name: Package artifact
        run: |
          set -euxo pipefail
          if [ -d dist ] && [ "$(ls -A dist)" ]; then
            zip -r build.zip dist
          else
            zip -r build.zip .
          fi
          ls -lah build.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
          if-no-files-found: error

  test:
    name: Automated Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: Verify artifact exists
        run: |
          echo "Verifying that build.zip exists..."
          if [ ! -f build.zip ]; then
            echo "❌ build.zip not found! Test failed."
            exit 1
          else
            echo "✅ build.zip found."
          fi
      - name: Mock automated tests
        run: |
          echo "Running automated mock tests..."
          unzip -l build.zip | grep "app.txt" && echo "✅ All tests passed!" || (echo "❌ Tests failed!" && exit 1)

  release:
    name: Release (dev)
    runs-on: ubuntu-latest
    needs: test
    environment: dev
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: Release to Dev
        uses: softprops/action-gh-release@v2
        with:
          tag_name: dev-${{ github.run_number }}
          prerelease: true
          body: "Automated dev release after successful tests"
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

