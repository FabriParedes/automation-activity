name: CI/CD Deployment Pipeline

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Package
        run: |
          set -euxo pipefail
          zip -r build.zip .
          ls -lah build.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip
          if-no-files-found: error

  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout with history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: Describe version
        id: ver
        run: echo "VER=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT
      - name: Build dynamic tag
        run: echo "TAG=${{ vars.BUILD_TAG }}-${{ steps.ver.outputs.VER }}" >> $GITHUB_ENV
      - name: Create Staging Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          prerelease: true
          body: ${{ vars.RELEASE_NOTE }}
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout with history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: .
      - name: Describe version
        id: ver
        run: echo "VER=$(git describe --tags --always --dirty)" >> $GITHUB_OUTPUT
      - name: Build dynamic tag
        run: echo "TAG=${{ vars.BUILD_TAG }}-${{ steps.ver.outputs.VER }}" >> $GITHUB_ENV
      - name: Create Production Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          prerelease: false
          body: ${{ vars.RELEASE_NOTE }}
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
